// <auto-generated />
using System;
using Figure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Figure.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221011180401_AddFigureEntity")]
    partial class AddFigureEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Figure.DataAccess.Entities.Figure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Figures");
                });

            modelBuilder.Entity("Figure.DataAccess.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ArchivedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f30d244b-7451-4589-a2ef-d96513d0aa97"),
                            CreatedAt = new DateTime(2022, 10, 11, 20, 4, 1, 489, DateTimeKind.Local).AddTicks(3417),
                            Description = "description1",
                            Email = "adsfdfg",
                            IsArchived = false,
                            Name = "test1",
                            PhoneNumber = "9345435"
                        },
                        new
                        {
                            Id = new Guid("39f98726-b356-49e5-b286-d2e97b55e4e2"),
                            CreatedAt = new DateTime(2022, 10, 11, 20, 4, 1, 489, DateTimeKind.Local).AddTicks(3504),
                            Description = "description1",
                            Email = "adsfdfg",
                            IsArchived = false,
                            Name = "test1",
                            PhoneNumber = "9345435"
                        },
                        new
                        {
                            Id = new Guid("e588a894-ee46-4b73-821e-e78ef15ff4a7"),
                            CreatedAt = new DateTime(2022, 10, 11, 20, 4, 1, 489, DateTimeKind.Local).AddTicks(3508),
                            Description = "description1",
                            Email = "adsfdfg",
                            IsArchived = false,
                            Name = "test1",
                            PhoneNumber = "9345435"
                        },
                        new
                        {
                            Id = new Guid("cc654e95-324f-425b-854f-9727e1d7102a"),
                            CreatedAt = new DateTime(2022, 10, 11, 20, 4, 1, 489, DateTimeKind.Local).AddTicks(3511),
                            Description = "description1",
                            Email = "adsfdfg",
                            IsArchived = false,
                            Name = "test1",
                            PhoneNumber = "9345435"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
