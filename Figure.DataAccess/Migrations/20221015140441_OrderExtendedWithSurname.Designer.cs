// <auto-generated />
using System;
using Figure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Figure.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221015140441_OrderExtendedWithSurname")]
    partial class OrderExtendedWithSurname
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Figure.DataAccess.Entities.Figure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Figures");
                });

            modelBuilder.Entity("Figure.DataAccess.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ArchivedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ba4a1eb-2bcc-4c22-a168-bbff52abbe22"),
                            CreatedAt = new DateTime(2022, 10, 15, 16, 4, 40, 831, DateTimeKind.Local).AddTicks(4470),
                            Description = "description1",
                            Email = "adsfdfg",
                            IsArchived = false,
                            Name = "test1",
                            PhoneNumber = "9345435",
                            Surname = "test1"
                        },
                        new
                        {
                            Id = new Guid("5a4abdd1-f058-4c5c-9b3c-c32382b2779d"),
                            CreatedAt = new DateTime(2022, 10, 15, 16, 4, 40, 831, DateTimeKind.Local).AddTicks(4654),
                            Description = "description1",
                            Email = "adsfdfg",
                            IsArchived = false,
                            Name = "test1",
                            PhoneNumber = "9345435",
                            Surname = "test1"
                        },
                        new
                        {
                            Id = new Guid("d841c21b-7f03-4395-bb1d-2146328ba025"),
                            CreatedAt = new DateTime(2022, 10, 15, 16, 4, 40, 831, DateTimeKind.Local).AddTicks(4657),
                            Description = "description1",
                            Email = "adsfdfg",
                            IsArchived = false,
                            Name = "test1",
                            PhoneNumber = "9345435",
                            Surname = "test1"
                        },
                        new
                        {
                            Id = new Guid("7c377932-6aff-4013-aa50-fd8348d374ac"),
                            CreatedAt = new DateTime(2022, 10, 15, 16, 4, 40, 831, DateTimeKind.Local).AddTicks(4661),
                            Description = "description1",
                            Email = "adsfdfg",
                            IsArchived = false,
                            Name = "test1",
                            PhoneNumber = "9345435",
                            Surname = "test1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
